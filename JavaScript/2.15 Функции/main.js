'use strict'

//////////1 
//с else 
function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    // ...
    return confirm('Родители разрешили?');
  }
}
//без else 
function checkAge(age) {
  if (age > 18) {
    return true;
  }
  // ...
  return confirm('Родители разрешили?');
}

//разницы нет т.к. если if условие вернет false то и так перейдет на следующий шаг на "родители разрешили"

///////////////2

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('Родители разрешили?');
  }
}
// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.

// Сделайте два варианта функции checkAge:

// Используя оператор ?
// Используя оператор ||

//1 используя ?
function checkAge(age) {
  result = age > 18 ? true : confirm('Родители разрешили?'); 
  return result;
}
//(без переменной он не хотел делать return поэтому добавлен result)

//2 используя ||

/////////////////////////////////////////////////////////////////3
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

// Пример вызовов:

// min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1

function min (a, b) {
  if (a < b) {
    return a;
  } else if (a > b) {
    return b;
  } else {
    return 'вы ввели равные числа';
  }
}

/////////////////////////////4
// Функция pow(x,n)
// Напишите функцию pow(x,n), которая возвращает x в степени n. 
// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.

let x = prompt('Введите x');
let n = prompt('Введите n');

function pow (x, n) {
  if (isNaN(x) === true || isNaN(n) === true || x <= 0 || n <= 0) {
    alert('Вы ввели что-то не то, давайте попробуйте еще раз')
  } else {
    let result = x ** n;
    alert(result);
  } 
}
pow (x, n);
